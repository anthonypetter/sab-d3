.wrapper {
    /*
     * Need to set this to relative so our tooltip's absolute positioning will
     * take its origin to be that of its ancestor - this wrapper - instead of
     * <html>. If not set, well, CSS sees no ancestors have an opinion, so,
     * tooltip will position from <html>.
     */
    position: relative;
}

.bin rect {
    fill: cornflowerblue;
}

/*
 * It's easy to recommend that when you're dealing with just basic stylistic
 * changes that you should stick with CSS rules instead of defining new JS
 * event listeners. So, the basic rule you can follow is "if you can do it in
 * CSS, you should do it in CSS".
 */
.bin rect:hover {
    fill: purple;
}

.bin text {
    text-anchor: middle;
    fill: darkgrey;
    font-size: 12px;
    font-family: sans-serif;
}

.mean {
    stroke: maroon;
    stroke-dasharray: 2px 4px;
}

.x-axis-label {
    fill: black;
    font-size: 1.4em;
    text-transform: capitalize;
}

body {
    display: flex;
    justify-content: center;
    padding: 5em 2em;
    font-family: sans-serif;
}

.tooltip {
    opacity: 0;
    position: absolute;
    top: -12px;
    left: 0;
    padding: 0.6em 1em;
    background: #fff;
    text-align: center;
    border: 1px solid #ddd;
    z-index: 10;
    transition: all 0.2s ease-out;
    pointer-events: none;
}

/*
 * Adding a 12x12 pixel square to the tooltip.
 */
.tooltip:before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 12px;
    height: 12px;
    background: white;
    border: 1px solid #ddd;
    border-top-color: transparent;
    border-left-color: transparent;
    transform: translate(-50%, 50%) rotate(45deg);
    transform-origin: center center;
    z-index: 10;
}

.tooltip-range {
    margin-bottom: 0.2em;
    font-weight: 600;
}